---

- name: Automated VXLAN deployment with BGP EVPN L3 underlay w/ Spine
  hosts: leaf
  gather_facts: no


  tasks:

        - block:

          - name: Set playbook name and mode
            set_fact:
              playbook_name: "overlay"
              playbook_mode: "-del-gen"

          - name: Cleanup host_vars/delete_vars dir
            run_once: true
            file:
              state: "{{ item }}"
              path: "host_vars/delete_vars"
            with_items:
              - absent
              - directory

          - name: Load variables from group_vars/delete_vars.yml file
            run_once: true
            include_vars:
              file: group_vars/delete_vars.yml
              name: to_del
          
          - name: Load variables from group_vars/delete_vars.yml file and appending to dag keyword
            when: to_del.l3vni is defined
            block :
            - set_fact:
                dag: "{{ to_del.l3vni }}"
            - set_fact:
                to_del: "{{ {'dag': dag } }}"

          # Collect and parse the show run nve data

          #- name: Run and parse show run nve
          #  ansible.utils.cli_parse:
          #    command: "show run nve"
          #    parser:
          #      name: ansible.netcommon.pyats
          #    set_fact: nve_output_parsed

          ########## Replace with genie parser

          # Remove this block and uncommment the task above
          - name: Collect "show run nve"
            cli_command:
              command: show run nve
            register: nve_output

          - name: Call python module to parse NVE output
            sh_run_nve_parse:
              command_output: "{{ nve_output.stdout }}"
            register: nve_parsed

          - set_fact:
              nve_output_parsed: "{{ nve_parsed.parsed }}"

          ########## Replace with genie parser

          - name: Add "show run nve" output to dictionary
            set_fact: 
              command_output: "{{ { 'run_nve' : nve_output_parsed } }}"

          - name: Get "update_access" value if present in group_vars/delete_vars.yml
            set_fact:
              update_access_intf: "{{ to_del['update_access_intf'] | default(false) }}"

          - name: Collect and add interface information to dictionary
            when: update_access_intf == true
            block:
            - name: Run and parse "show run | section ^interface"
              ansible.utils.cli_parse:
                command: "show run | section ^interface"
                parser:
                  name: ansible.netcommon.pyats
                set_fact: interface_output
                
            - name: Add "show run | section ^interface" output to dictionary
              set_fact: 
                command_output: "{{ command_output | combine ( {'intf_sec' : interface_output} ) }}"

          - name: Process collected CLIs' output
            parser_to_delete_yaml:
              hostvars: "{{ command_output }}"
              toDel: "{{ to_del }}"
            register: module_output
             
          - name: Copying configurations to the repective files ( <hostname>.yml ) under host_vars/delete_vars folder
            when: module_output['yaml'] != '{}\n'
            copy:
              dest: host_vars/delete_vars/{{ inventory_hostname }}.yml
              content: "{{ module_output['yaml'] }}"

          rescue:
            - name: Record failure
              include_tasks: ../subtasks/common_subtasks/subtask_rescue_task.yml


- name: Display output file info
  hosts: localhost
  gather_facts: no
  run_once: True

  tasks:
    - debug:
        msg: 
        - "Please refer the following folders/files"
        - "'overlay-del-gen-err.log' in 'log_directory' folder for error informations if any"
