Inputs
######

Inventory.yml
*************

In the inventory file roles (Spine or Leaf), names and management IP addresses of nodes are described.

.. code-block:: yaml

    all:
        children:
            leaf:
                hosts:
                    Leaf-01:
                        ansible_host: 10.62.149.179
                    Leaf-02:
                        ansible_host: 10.62.149.182
            
            spine:
                hosts:
                    Spine-01:
                        ansible_host: 10.62.149.180
                    Spine-02:
                        ansible_host: 10.62.149.181

``leaf`` and ``spine`` are two roles. Each node should be placed under one of the sections.

``Leaf-1`` , ``Spine-01`` are the hostnames. Keep in mind that that names should be in sync with configuration file names in the directory **host_vars**.

``ansible_host`` is an ip address of the management interface.

group_vars/all.yml
*******************

In the file ``all.yml`` defined parameters which are applicable for several devices in the network.
Lets check it one by one.

General access
==============

This section defines access paramerets to the remote devices.

.. code-block:: yaml

    ansible_connection: ansible.netcommon.network_cli
    ansible_network_os: cisco.ios.ios
    ansible_python_interpreter: "python"
    ansible_user: cisco
    ansible_ssh_pass: cisco123

    <...skip...>

.. table::
   :widths: auto

   ================================ ==========================================================================
     **Parameter**                  **Comments**
   ================================ ==========================================================================
   **ansible_connection**           This option defines type for connection to the remote devices. In this

                                    project connection via SSH withimplementation of CLI is used:


                                    * **ansible.netcommon.network_cli**

   **ansible_network_os**           This option defines operation system of the remote device. This option is

                                    needed in case of usage "network_cli". Cat9k uses IOS-XE so parameter is 

                                    set to:

                                    * **cisco.ios.ios** 

   **ansible_python_interpreter**   This option instruct Ansible to use defined python interpreter. This option  

                                    is set to:
    
                                    * **python**
    
   **ansible_user**                 This option defines a username which is used for access remote devices 
    
                                    over SSH. In this project user must have priviledge level 15. It is set to:
    
                                    * **cisco**
    
   **ansible_password**             This option defined a password for the user which is set in ``ansible_user``.
    
                                    In this project password is set to:
    
                                    * **cisco123**                                
   ================================ ==========================================================================

.. warning::

   ``ansible_user`` must have priveldge level 15. Example of the configuration is below 

   .. code-block::

       username cisco privilege 15 password 0 cisco123

   In the example unencrypted password is used. Fill free to use HIDDEN (7)

If ``enable`` password should be used, check the `Enable Mode <https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html>`_ documentation.
     
L2VPN EVPN general definition
=============================

This section defines global l2vpn evpn parameters.

.. code-block:: yaml
    
    l2vpn_global:
        replication_type: 'static'
        router_id: 'Loopback1'
        default_gw: 'yes'
    
    <...skip...>

.. table::
   :widths: auto

   ================================================ ==========================================================================
     **Parameter**                                                            **Comments**
   ================================================ ==========================================================================
   **l2vpn_global** / :red:`mandatory`              This option defines l2vpn epvn globally.

   **replication_type** / :orange:`optional`        This option defines type of repliction for the L2 BUM traffic globally.

                                                    Could be overwritten per vlan in "vlans" -> "vlan_id" -> "replication_type"

                                                    | section. 
                                                    
                                                    Option **static** instuct to use multicast for the BUM replication.

                                                    Option **ingress** instruct to use Ingress-replication (unicast) for

                                                    | BUM replication.

                                                    **Choices**:

                                                    * static
                                                    
                                                    * ingress
   
   **router_id** / :orange:`optional`               This option defines interface, which IP address will be used for defining

                                                    router-id of l2vpn. In this project interface **Loopback1** is used. This option 

                                                    is set to:

                                                    * **Loopback1**
   
   **default_gw** / :orange:`optional`              This option defines if Default GW will be advertised or not. In this project

                                                    it is defined by defualt:

                                                    * **default_gw: 'yes'**
   ================================================ ==========================================================================

VRF definition
==============

This section defines vrf parameters. Lets review parameters for unicast first.

.. code-block:: yaml

    vrfs:
        green:
            rd: '1:1'
                afs:
                    ipv4:
                        rt_import: 
                            - '1:1'
                            - '1:1 stitching'
                        rt_export: 
                            - '1:1'
                            - '1:1 stitching'
                    ipv6:
                        rt_import:
                            - '1:1'
                            - '1:1 stitching'
                        rt_export:
                            - '1:1'
                            - '1:1 stitching'
    <...skip...>

=============================================== ========================================================================== 
**Parameter**                                                            **Comments**
=============================================== ==========================================================================
**vrfs** / :red:`mandatory`                     This option defines vrf section globally.

**<vrf_name>** / :red:`mandatory`               This option defines a vrf name.

**rd** / :red:`mandatory`                       This option defines a **route distinguisher** of the vrf.

**afs** / :red:`mandatory`                      | This option defines Address Families which will be activated for vrf.

                                                Option **ipv4** defines ipv4 address family.

                                                | Option **ipv6** defines ipv6 address family.

                                                **Choices:**

                                                * ipv4

                                                * ipv6

**rt_import** / :red:`mandatory`                This option defines Route Target **Import** per VRF/AF. In the option is it allowed

                                                to define more than one RT. For EVPN AF additional key is used - **"stitching".**

                                                | In this project next parameter are set by default for both AFs(IPv4 and IPv6):

                                                * 1:1

                                                * 1:1 stitching (L2VPN EVPN AF)

**rt_export** / :red:`mandatory`                This option defines Route Target **Export** per VRF/AF. In the option is it allowed

                                                to define more than one RT. For EVPN AF additional key is used - **"stitching".**

                                                | In this project next parameter are set by default for both AFs(IPv4 and IPv6):

                                                * 1:1

                                                * 1:1 stitching (L2VPN EVPN AF)
=============================================== ==========================================================================

Vlans section
=============

This section defines VLANs and it stitching with EVIs(EVPN instance) and VNIs(VXLAN network identifier).

.. code-block:: yaml

    vlans:

     101:
      vlan_type: 'access'
      description: 'Access_VLAN_101'
      vni: '10101'
      evi: '101'
      type: 'vlan-based'
      encapsulation: 'vxlan'
      replication_type: 'static'
      replication_mcast: '225.0.0.101'
    
     102:
      vlan_type: 'access'
      description: 'Access_VLAN_102'
      vni: '10102'
      evi: '102'
      type: 'vlan-based'
      encapsulation: 'vxlan'
      replication_type: 'ingress'
    
     901:
      vlan_type: 'core'
      description: 'Core_VLAN_VRF_green'
      vni: '50901'
      vrf: 'green'

    <...snip...>

.. table::
   :widths: auto

   ================================================ ==========================================================================
     **Parameter**                                                            **Comments**
   ================================================ ==========================================================================
   **vlans** / :red:`mandatory`                     This option defines vlan section globally.

   **<vlan_id>** / :red:`mandatory`                 This option defines VLAN ID on the switch. In this example there are **101,**

                                                    **102, 901**.

   **vlan_type** / :red:`mandatory`                 | This option defines type of the VLAN. 

                                                    Option **access** is used for L2VNIs.

                                                    Option **core** is used for L3VNIs.

                                                    | Option **non-vxlan** is used for VLANs, which are not extended over Fabric.

                                                    **Choices**

                                                    * access

                                                    * core

                                                    * non-vxlan
   
   **description** / :orange:`optional`             This option defines VLAN description.

   **vni** / :red:`mandatory`                       This option defines the VNI which is stitched with a VLAN ID on the swith.

   **evi** / :red:`mandatory`                       This option defines the EVI which is stitched with a VLAN ID on the swith.

                                                    This parameter is **mandatory for L2VNIs only.**

   **type** / :red:`mandatory`                      This option defines the type of EVI. On Cat9k **vlan-based** is supported

                                                    for now. This parameter is  **mandatory for L2VNIs only.**

   **encapsulation** / :red:`mandatory`             This option defines encapsulation for packet is the core. It is set to

                                                    **vxlan**. This parameter is  **mandatory for L2VNIs only.**
                                                    
   **replication_type** / :red:`mandatory`          | This option defines replication type for the BUM for L2VNI.
                                                    
                                                    Option **static** is used for multicast replication. In this case 

                                                    **replication_mcast** parameter is needed.

                                                    | Option **ingress** is used for Ingress-replication (unicast).

                                                    **Choices:**

                                                    * static

                                                    * ingress

                                                    This parameter is  **mandatory for L2VNIs only.**

   **vrf** / :red:`mandatory`                       This option defines VRF for which L3VNI is used for encapsulation the routed

                                                    | traffic in the core. For this option **vlan_type** must be **core**.

                                                    This parameter is  **mandatory for L3VNIs only.**
   ================================================ ==========================================================================