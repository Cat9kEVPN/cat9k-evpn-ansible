---

- name: Disable TRM for EVPN overlay
  hosts: all
  gather_facts: no
  vars:
    action: 'delete'
    mvpn_afs_spine: []
    trm_block: ''
    leaf_trm_dict:
      '../templates/vrf_definition_trm.j2': 'VRF block'
      '../templates/pim_interfaces_trm.j2': 'PIM interface block'
      '../templates/rp_interfaces_trm.j2': 'RP interface block'
    common_trm_dict:
      '../templates/bgp_mvpn_af_trm.j2': 'BGP MVPN block'

  tasks:
    
# ------ load input files --------

            - name: Load vars from trm_delete_vars.yml
              run_once: True
              include_vars: 
                file: "./group_vars/trm_delete_vars.yml"
                name: trm_delete_vars

            - name: Run and parse "show run nve"
              when: inventory_hostname in (groups['leaf'] | default([]))
              ansible.utils.cli_parse:
                command: "show run nve"
                parser:
                  name: ansible.netcommon.pyats
                set_fact: overlay_dict

            - name: Run and parse "show run | sec bgp"
              ansible.utils.cli_parse:
                command: "show run | sec bgp"
                parser:
                  name: ansible.netcommon.pyats
                set_fact: bgp_dict

            - name: Collect "show run | sec vrf"
              when: inventory_hostname in (groups['leaf'] | default([]))
              cli_command:
                command: show run | sec vrf
              register: sec_vrf_output

            - name: Process TRM data for Leaf
              when: inventory_hostname in (groups['leaf'] | default([]))
              trm_delete_preprocess:
                node: leaf
                dev_ov_dict: "{{ overlay_dict }}"
                dev_bgp_dict: "{{ bgp_dict }}"
                dev_vrf_output: "{{ sec_vrf_output.stdout_lines }}"
                to_del: "{{ trm_delete_vars.vrfs | default([]) }}"
              register: leaf_module_output

            - name: Include vars from leaf module output
              set_fact:
                "{{ item.key }}": "{{ item.value }}"
              with_dict: "{{ leaf_module_output }}"

            - name: Collect MVPNs to delete of all leafs
              run_once: True
              set_fact:
                mvpn_afs_spine: "{{ mvpn_afs_spine + (hostvars[item]['mvpns_to_del'] | default([])) }}"
              loop: "{{ groups['leaf'] }}"

            - name: Process TRM data for Spine
              when: inventory_hostname in (groups['spine'] | default([]))
              trm_delete_preprocess:
                node: spine
                dev_bgp_dict: "{{ bgp_dict }}"
                mvpns_to_del: "{{ mvpn_afs_spine | unique }}"
              register: spine_module_output

            - name: Include vars from spine module output
              set_fact:
                "{{ item.key }}": "{{ item.value }}"
              with_dict: "{{ spine_module_output }}"

            - name: Read leaf-only config template files
              when: inventory_hostname in (groups['leaf'] | default([]))
              set_fact:
                trm_block: "{{ trm_block }}! {{ item.value }} {{ lookup('template', item.key ) }}"
              with_dict: "{{ leaf_trm_dict }}"

            - name: Read config template files
              set_fact:
                trm_block: "{{ trm_block }}! {{ item.value }} {{ lookup('template', item.key ) }}"
              with_dict: "{{ common_trm_dict }}"

            - name: Copy configurations to respective file (<inventory_hostname>-trm-del.txt) under 'preview_files' folder
              copy:
                dest: preview_files/{{inventory_hostname}}-trm-del.txt
                content: "{{ trm_block | regex_replace('#jinja2: lstrip_blocks: \"True\", trim_blocks: \"True\"', '') | regex_replace('\\n(\\s+)','\n') | regex_replace('! ','\n\n! ') }}"


- name: Display output file info
  hosts: localhost
  gather_facts: no

  tasks:        
            - debug:
                msg: Please refer to <hostname>-trm-del.txt in 'preview_files' folder
