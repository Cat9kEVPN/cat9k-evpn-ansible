---

- name: Enable DHCP for EVPN overlay
  hosts: leaf
  gather_facts: no
  vars:
    playbook_mode: ''

  tasks:
            - name: Load and process DHCP input file
              run_once: true
              block:
              - name: Load vars from dhcp_db.yml
                when: 'playbook_mode == ""'
                include_vars: 
                  file: "./group_vars/dhcp_db.yml"
            
              - name: Collect VRFs with no relay interface set if any
                dhcp_preprocess:
                  dhcp_info: "{{ vrfs }}"
                register: no_src_vrf

              - name: Get list of VRFs
                set_fact:
                  vrf_list: "{{ vrfs.keys() }}"

            - name: Collect VRFs, SVIs and overlay interfaces data
              block:
              - name: Run and parse show run nve
                ansible.utils.cli_parse:
                  command: "show run nve"
                  parser:
                    name: ansible.netcommon.pyats
                  set_fact: overlay_dict

              - name: Collect VRFs from show run nve output if vrf is set to 'all'
                when: '"all" in vrf_list'
                block:
                - set_fact:
                    vrf_dev_dict: "{{ overlay_dict.vrf.keys() | default([]) }}"
                - set_fact: 
                    all_vrfs: "{{ vrf_dev_dict | difference(vrf_list) }}"
                    vrf_list: "{{ vrf_dev_dict | list }}"

              - name: Collect svis of the VRFs from show run nve output
                set_fact: 
                  svis: "{{ (svis | default({})) | combine ({item.value.vrf: (svis[item.value.vrf] | default([])) + [item.key]}) }}"
                with_dict: "{{ overlay_dict.svis }}"
                when: item.value.vrf in vrf_list and item.value.svi_type == 'access'

              - name: Assign relay src interface from show run nve output for VRFs if not defined already
                dhcp_preprocess:
                  ovrly_intf_info: "{{ {'all_vrfs': vrf_list, 
                                       'overlay_intf': overlay_dict.overlay_interfaces | default({}), 
                                       'no_src_vrf': no_src_vrf.vrfs | default([])
                                       } }}"
                register: ovrly_intf_output

            - name: Read DHCP configuration template
              set_fact:
                dhcp_block: "! dhcp block\n!{{ lookup('template', '../templates/dhcp_overlay.j2') }}"

            - name: Copy configurations to respective file ( <hostname>-dhcp{{playbook_mode}}.txt ) under 'preview_files' folder
              copy:
                dest: preview_files/{{inventory_hostname}}-dhcp{{playbook_mode}}.txt
                content: "{{ dhcp_block | regex_replace('#jinja2: lstrip_blocks: \"True\", trim_blocks: \"True\"', '') | regex_replace('\\n(\\s+)','\n') }}"


- name: Display output info
  hosts: localhost
  gather_facts: no
  vars:
    playbook_mode: ''

  tasks:
    - debug:
        msg: Please refer to <hostname>-dhcp{{playbook_mode}}.txt in 'preview_files' folder
