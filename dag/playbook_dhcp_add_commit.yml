---

    - name: Enable DHCP for EVPN overlay
      hosts: leaf
      gather_facts: no
      vars_files:
        - "group_vars/dhcp_vars.yml"
    
      tasks:  
    
              - name: Load vars from host_vars/<inventory_hostname>.yml
                include_vars: 
                  file: host_vars/{{ inventory_hostname }}.yml
                  name: host_vars_vars
    
              - name: Process dhcp_vars.yml content
                run_once: True
                block:
                - name: Call python module to process dhcp_vars.yml content
                  dhcp_src_addr_info:
                    dhcp_info: "{{ dhcp }}"
                  register: dhcp_config_info
    
                - name: Check for error msg 
                  when: dhcp_config_info['dhcp_ret_dict']['global_src_err'] == True
                  block:
                  - set_fact: 
                      global_failed: true
                  - debug:
                      msg: Playbook execution stopped because global relay source interface is not defined
                  - meta: end_play
    
                - set_fact: 
                    dhcp_src_dict: "{{ dhcp_config_info.dhcp_ret_dict }}"
    
              - name: Run and parse show run nve
                ansible.utils.cli_parse:
                  command: "show run nve"
                  parser:
                    name: ansible.netcommon.pyats
                  set_fact: show_run_nve
    
              - name: Collect VRFs from show run nve output if key is 'all'
                when: '"all" in dhcp.vrfs.keys()'
                set_fact: 
                  all_vrfs: "{{ show_run_nve.vrf.keys() }}"
    
              - name: Collect VRFs from dhcp_vars.yml if key is not 'all'
                when: '"all" not in dhcp.vrfs.keys()'
                set_fact: 
                  all_vrfs: "{{ dhcp.vrfs.keys() }}"
    
              - name: Get relay src interface for VRFs from host_vars/<inventory>.yml
                block:
                - name: Call python module to assign relay src interface from host_vars/<inventory>.yml for VRFs if not defined already
                  dhcp_src_addr_info:
                    ovrly_intf_info: "{{ ovrly_intf_info | default({}) | combine ( {'all_vrfs': all_vrfs}, {'overlay_intf': host_vars_vars['overlay_interfaces']}, {'no_src_vrf': dhcp_src_dict['no_src_vrf']} ) }}"
                  register: ovrly_intf_output
    
                - name: Check for error msg
                  when: ovrly_intf_output['dhcp_ret_dict']['intf_err'] != False
                  debug:
                    msg: "Relay source interface for {{ ovrly_intf_output['dhcp_ret_dict']['intf_err'] }} is not defined and cannot be found in hostvars/{{inventory_hostname}}.yml"
                  failed_when: ovrly_intf_output['dhcp_ret_dict']['intf_err'] not in ovrly_intf_output['dhcp_ret_dict']['overlay_intf']
    
                - set_fact: 
                    ovrly_intf_output: "{{ ovrly_intf_output.dhcp_ret_dict }}"
    
              - name: Collect SVIs from show run nve output
                block:
                - name: Initialise svi dictionary
                  set_fact: 
                    svis: "{{ svis | default({}) | combine ({ item : [] }) }}"
                  loop: "{{ all_vrfs }}"
    
                - name: Populate svi dictionary with show run nve output
                  set_fact: 
                    svis: "{{ svis | combine ({ item.value.vrf : svis[item.value.vrf]+[item.key] }) }}"
                  with_dict: "{{ show_run_nve.svis }}"
                  when: item.value.vrf in all_vrfs and item.value.svi_type == 'access'

              - name: Apply configurations
                cli_config:
                  config: "{{ lookup('template', '../templates/dhcp_overlay.j2') }}"
                  diff_match: none
                register: result
